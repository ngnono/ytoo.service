@using Yintai.Hangzhou.Model.Enums
@model Yintai.Hangzhou.Cms.WebSiteV1.Models.ResourceViewModel
@{
    ViewBag.Title = "资源详情";
}

<h2>@ViewBag.Title</h2>

<fieldset>
    <div class="display-label">@Html.LabelFor(m=>m.SourceId)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.SourceId)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.SourceType)</div>
    <div class="display-field">
         @Html.Label("", ((Yintai.Hangzhou.Model.Enums.SourceType)Model.SourceType).ToFriendlyString())
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Name)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Name)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.ExtName)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.ExtName)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Domain)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Domain)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.IsDefault)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.IsDefault)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.SortOrder)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.SortOrder)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Type)</div>
    <div class="display-field">
         @Html.Label("", ((Yintai.Architecture.Common.Models.ResourceType)Model.Type).ToFriendlyString())
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Size)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Size)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Width)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Width)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Height)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Height)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.ContentSize)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.ContentSize)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.Status)</div>
    <div class="display-field">
         @Html.Label("", ((DataStatus)Model.Status).ToFriendlyString())
    </div>


    <div class="display-label">@Html.LabelFor(m=>m.CreatedDate)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.CreatedDate)
    </div>

    <div class="display-label">@Html.LabelFor(m=>m.UpdatedDate)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.UpdatedDate)
    </div>

    <div class="display-label">
        资源
    </div>
    <div class="display-field">
        @if (Model.Type == (int)Yintai.Architecture.Common.Models.ResourceType.Image)
        {
                            switch ((SourceType)Model.SourceType)
                    {
                        case SourceType.CustomerPortrait:
                <img src="@String.Concat(Model.Domain, Model.Name, "_50x50.jpg")" alt="50X50" />
                            break;
                        case SourceType.SpecialTopic:
                <img src="@String.Concat(Model.Domain, Model.Name, "_315x0.jpg")" alt="315x0" />
                            break;
                        default:
                <img src="@String.Concat(Model.Domain, Model.Name, "_120x0.jpg")" alt="120X0" />
                            break;
                    }
        }
    </div>
</fieldset>
<p>
    @Html.ActionLink2("修改", "Edit", new { id = Model.Id }, new {@class="btn"}) 
    @Html.ActionLink2("列表", "Index", null, new { @class="btn"})
</p>

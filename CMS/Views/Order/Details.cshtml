@model Yintai.Hangzhou.Cms.WebSiteV1.Models.OrderViewModel
@{
    ViewBag.Title = "订单详情";
}
@section PageBread
{
    <ul class="breadcrumb">
        <li>@Html.ActionLink2("订单管理", "Index")<span class="divider">/</span></li>
        <li>@Html.ActionLink2("订单列表", "List")<span class="divider">/</span></li>
        <li class="active">@ViewBag.Title</li>
    </ul>
}
@section PageJsSection
{
    <script>
        function onPrintClose(e) {
            e.preventDefault();
            if (confirm('确认已经打印报表之后再退出，是否已打印？')) {
                window.location.reload();
                return true;
            }
            else
                return false;
        }
        function PrintHZ(reportUrl, reportTitle) {
            var printwin = $("#printwindow");
            printwin.kendoWindow({
                content: {
                    url: reportUrl
                    },
                    iframe: true,
                    close: onPrintClose,
                    width: "100%",
                    height: "100%",
                    modal: true,
                    title: reportTitle,

                });
                var kendoWindow = printwin.data("kendoWindow");
                kendoWindow.open();
                kendoWindow.center();
                var printFrame = $("iframe:first")[0];
                $(printFrame).bind('load', function () {
                    this.focus();
                    this.contentWindow.print();
                });

        }
        $(document).ready(function () {
            $("#order").kendoTabStrip({
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                }
            });
           
            $("#printorder").click(function (e) {
                e.preventDefault();
                if (!confirm('确认打印订单？')) {
                    return;
                }
                PrintHZ("@Url.Action("PrintOrder",new {OrderNo=Model.OrderNo})", "打印订单");
                
            });
            $("#printship").click(function (e) {
                e.preventDefault();
                if (!confirm('确认打印发货单？')) {
                    return;
                }
                PrintHZ("@Url.Action("PrintShipping",new {OrderNo=Model.OrderNo})", "打印发货单");

           });
            $("#printsale").click(function (e) {
                e.preventDefault();
                if (!confirm('确认打印销售单？')) {
                    return;
                }
                PrintHZ("@Url.Action("PrintSales",new {OrderNo=Model.OrderNo})", "打印销售单");
            });
            $("#btnReceive").click(function (e) {
               
                if (!confirm('确认用户已签收？')) {
                    return false;
                }
                return true;
           });

        });
    </script>
}
 @Html.Partial("_AlertMessage")
<div id="printwindow"></div>

<div id="order">
    <ul>
        <li class="k-state-active">订单信息
        </li>
        <li>订单明细
        </li>
        <li>订单日志
        </li>
        <li id="rmatab">退换货
        </li>

    </ul>
    <div>
        <div class="row">
            <div class="span5">
                <div class="widget stacked">
                    <div class="widget-header">
                        <h3>订单信息</h3>
                    </div>
                    <div class="widget-content">
                        <div class="span2">
                            @Html.LabelFor(model => model.OrderNo)
                            @Html.TextBoxFor(model => model.OrderNo, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.Customer)
                            @Html.TextBoxFor(model => model.Customer.Nickname, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.TotalAmount)
                            @Html.TextBoxFor(model => model.TotalAmount, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.ShippingFee)
                            @Html.TextBoxFor(model => model.ShippingFee, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.StoreName)
                            @Html.TextBoxFor(model => model.StoreName, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.PaymentMethodName)
                            @Html.TextBoxFor(model => model.PaymentMethodName, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.Status)
                            @Html.TextBox("Status", ((Yintai.Hangzhou.Model.Enums.OrderStatus)Model.Status).ToFriendlyString(), new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.Memo)
                             @Html.TextBoxFor(model => model.Memo, new { @class = "span2", @readonly = true })
                        </div>

                        <div class="span2">
                            @Html.LabelFor(model => model.CreateDate)
                            @Html.TextBoxFor(model => model.CreateDate, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.UpdateDate)
                            @Html.TextBoxFor(model => model.UpdateDate, new { @class = "span2", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
            <div class="span5">
                <div class="widget stacked">
                    <div class="widget-header">
                        <h3>送货地址信息</h3>
                    </div>
                    <div class="widget-content">
                        <div class="span5">
                            @Html.LabelFor(model => model.ShippingAddress)
                            @Html.TextBoxFor(model => model.ShippingAddress, new { @class = "span4", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.ShippingContactPerson)
                            @Html.TextBoxFor(model => model.ShippingContactPerson, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.ShippingContactPhone)
                            @Html.TextBoxFor(model => model.ShippingContactPhone, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.ShippingViaMethod)
                            @Html.TextBoxFor(model => model.ShippingViaMethod.Name, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.ShippingZipCode)
                            @Html.TextBoxFor(model => model.ShippingZipCode, new { @class = "span2", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
            <div class="span5">
                <div class="widget stacked">
                    <div class="widget-header">
                        <h3>发票信息</h3>
                    </div>
                    <div class="widget-content">
                        <div class="span2">
                            @Html.LabelFor(model => model.NeedInvoice)
                            @Html.CheckBox("NeedInvoice", Model.NeedInvoice ?? false, new { @class = "span2", @disabled = "disabled" })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.InvoiceSubject)
                            @Html.TextBoxFor(model => model.InvoiceSubject, new { @class = "span2", @readonly = true })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.InvoiceDetail)
                            @Html.TextBoxFor(model => model.InvoiceDetail, new { @class = "span2", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>
        <table>
            <tr>
                <th>商品图片</th>
                <th>商品编号</th>
                <th>显示名称</th>
                <th>订购描述
                </th>
                 <th>品牌</th>
                <th>吊牌价</th>
                <th>销售价</th>
                <th>数量</th>
                <th>总额
                </th>
                <th>商品货号</th>

            </tr>

            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@if (item.ProductResource != null)
                        {
            
                        <img width="120" src="@item.ProductResource.ProductImgUrl_120" alt="120x0" />
                        }
                    </td>
                    <td>@Html.DisplayFor(model => item.ProductId)</td>
                    <td>@Html.DisplayFor(model => item.ProductName)</td>
                    <td>@Html.DisplayFor(model => item.ProductDesc)</td>
                    <td>@Html.DisplayFor(model => item.Brand.Name)</td>
                    <td>@Html.DisplayFor(model => item.UnitPrice)</td>
                    <td>@Html.DisplayFor(model => item.ItemPrice)</td>
                    <td>@Html.DisplayFor(model => item.Quantity)</td>
                    <td>@Html.DisplayFor(model => item.ExtendPrice)</td>
                    <td>@Html.DisplayFor(model => item.UPCCode)</td>
                </tr>
            }
        </table>
    </div>
    <div>
        <table>
            <tr>
                <th>订单号</th>
                <th>操作用户</th>
                <th>操作时间
                </th>
                <th>操作描述</th>

            </tr>

            @foreach (var item in Model.Logs)
            {
                <tr>

                    <td>@Html.DisplayFor(model => item.OrderNo)</td>
                    <td>@Html.DisplayFor(model => item.CustomerId)</td>
                    <td>@Html.DisplayFor(model => item.CreateDate)</td>
                    <td>@Html.DisplayFor(model => item.Operation)</td>
                </tr>
            }
        </table>
    </div>
    <div>
      @Html.Partial("_RMAList",Model)
    </div>

</div>

<div id="voidConfirm" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabel">确认作废？</h3>
    </div>
    <div class="modal-body">
        <p>确认作废该订单吗，一旦作废，订单就会立即失效。</p>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">关闭</button>
        @Html.ActionLink2("确认", "Void", new { OrderNo = Model.OrderNo }, new { @class = "btn btn-primary" })
    </div>
</div>

@model Yintai.Hangzhou.Cms.WebSiteV1.Models.ProductViewModel
@{
    ViewBag.Title = "商品详情";
    var returnUrl = Request.Params["returnUrl"];
    bool isCustomizeReturn = returnUrl != null && Url.IsLocalUrl(returnUrl.ToString());
}
@section PageBread
{
    <ul class="breadcrumb">
        <li>@Html.ActionLink2("商品管理", "Index")<span class="divider">/</span></li>
        <li class="active">@ViewBag.Title</li>
    </ul>
}

<h2>@ViewBag.Title</h2>

<fieldset>

    <div class="display-label">@Html.LabelFor(model=>model.Name)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Name)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.Brand_Id)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Brand_Id)
    </div>
        <div class="display-label">@Html.LabelFor(model => model.BrandName)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.BrandName)
    </div>
    <div class="display-label">@Html.LabelFor(model => model.Description)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Description)
         @if (Model.Audios != null && Model.Audios.Count() > 0)
         {
        @Html.Partial("_AudioPlayer", Model.Audios.First())
                }
    </div>

    <div class="display-label">@Html.LabelFor(model => model.CreatedDate)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.CreatedDate)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.CreatedUser)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.CreatedUser)
    </div>
     <div class="display-label">@Html.LabelFor(model => model.UnitPrice)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.UnitPrice)
    </div>
    <div class="display-label">@Html.LabelFor(model => model.Price)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Price)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.RecommendedReason)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.RecommendedReason)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.Status)</div>
    <div class="display-field">
        @Html.Label("", ((Yintai.Hangzhou.Model.Enums.DataStatus)Model.Status).ToFriendlyString())
    </div>
      <div class="display-label"> @Html.LabelFor(model => model.Is4Sale)</div>
    <div class="display-field">
        @Html.CheckBox("Is4Sale", Model.Is4Sale ?? false, new { @readonly=true})
    </div>
    <div class="display-label">@Html.LabelFor(model => model.UPCCode)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.UPCCode)
    </div>
    <div class="display-label">@Html.LabelFor(model => model.Store_Id)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Store_Id)
    </div>
        <div class="display-label">@Html.LabelFor(model => model.StoreName)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.StoreName)
    </div>
    <div class="display-label"> @Html.LabelFor(model => model.Tag_Id)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Tag_Id)
    </div>
        <div class="display-label"> @Html.LabelFor(model => model.TagName)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.TagName)
    </div>
    <div class="display-label"> @Html.LabelFor(model => model.FavoriteCount)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.FavoriteCount)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.ShareCount)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.ShareCount)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.InvolvedCount)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.InvolvedCount)
    </div>

    <div class="display-label">@Html.LabelFor(model => model.RecommendUser)</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.RecommendUser)
    </div>

    <div class="display-label">
        @Html.LabelFor(model => model.TopicIds)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.TopicIds)
    </div>
        <div class="display-label">
        @Html.LabelFor(model => model.TopicName)
    </div>
    <div class="display-field">
        <ul>
            @foreach (var topic in Model.TopicName)
            {
                <li>
                    @Html.Label("", topic)
                </li>
            }
        </ul>
    </div>
    <div class="display-label">
        @Html.LabelFor(model => model.PromotionIds)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.PromotionIds)
    </div>
        <div class="display-label">
        @Html.LabelFor(model => model.PromotionName)
    </div>
    <div class="display-field">
        <ul>
            @foreach (var pro in Model.PromotionName)
            {
                <li>
                    @Html.Label("", pro)
                </li>
            }
        </ul>
    </div>
        <div class="display-label">
        @Html.LabelFor(model => model.Properties)
    </div>
    <div class="display-field">
        @if (Model.Properties != null)
        { 
            <table class="scopes">
              @Html.DisplayFor(model => model.Properties)
            </table>
        }
       
    </div>
 <div class="display-label">图片</div>
    <div class="display-field">
        @if (this.Model.Resources != null )
        {
            foreach (var re in Model.Resources)
            {
                if (re.Type == (int)Yintai.Architecture.Common.Models.ResourceType.Image)
                {
                        
            <img width="120" src="@String.Concat(re.Domain, re.Name, "_120x0.jpg")" alt="120x0" />
                }
            }

        }
    </div>
</fieldset>
<p>
    @Html.ActionLink2("编辑", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary" })
               @if (isCustomizeReturn) {
                <a href="@Html.Raw(returnUrl.ToString())" class="btn">返回</a>
            }
            else {
             @Html.ActionLink2("返回列表", "List", null, new { @class = "btn" })
            }
</p>
